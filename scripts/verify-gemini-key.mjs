#!/usr/bin/env node

/**
 * Script para verificar la validez de la clave API de Gemini
 * Ejecutar: node scripts/verify-gemini-key.mjs
 */

import { readFileSync } from 'fs'
import { GoogleGenerativeAI } from '@google/generative-ai'

// Cargar variables de entorno manualmente
const envContent = readFileSync('.env.local', 'utf8')
const envLines = envContent.split('\n')
let GEMINI_API_KEY = null

for (const line of envLines) {
  if (line.startsWith('GEMINI_API_KEY=') && !line.startsWith('#')) {
    GEMINI_API_KEY = line.split('=')[1]
    break
  }
}

console.log('üîç Verificando clave API de Gemini...\n')

// Verificaci√≥n 1: Existencia de la clave
if (!GEMINI_API_KEY) {
  console.error('‚ùå Error: GEMINI_API_KEY no est√° definida en .env.local')
  process.exit(1)
}

// Verificaci√≥n 2: Formato de la clave
const keyFormat = /^AIza[A-Za-z0-9_-]{35}$/
if (!keyFormat.test(GEMINI_API_KEY)) {
  console.error('‚ùå Error: Formato de clave inv√°lido')
  console.error('   Formato esperado: AIza + 35 caracteres alfanum√©ricos')
  console.error(`   Clave actual: ${GEMINI_API_KEY.substring(0, 10)}... (${GEMINI_API_KEY.length} caracteres)`)
  process.exit(1)
}

console.log('‚úÖ Formato de clave v√°lido')
console.log(`   Clave: ${GEMINI_API_KEY.substring(0, 10)}...${GEMINI_API_KEY.substring(-4)}`)

// Verificaci√≥n 3: Conexi√≥n y permisos
try {
  console.log('\nüîó Probando conexi√≥n con Gemini...')
  
  const genAI = new GoogleGenerativeAI(GEMINI_API_KEY)
  const model = genAI.getGenerativeModel({ 
    model: 'gemini-2.5-flash',
    systemInstruction: 'Eres un asistente √∫til para usuarios de La Colectiva.'
  })

  const result = await model.generateContent('Responde solo "OK" si puedes leer este mensaje.')
  const response = result.response.text().trim()
  
  console.log('‚úÖ Conexi√≥n exitosa con Gemini')
  console.log(`   Respuesta del modelo: "${response}"`)
  console.log('‚úÖ La clave tiene los permisos necesarios')
  
} catch (error) {
  console.error('‚ùå Error al conectar con Gemini:')
  
  if (error.message.includes('API key not valid')) {
    console.error('   ‚Üí La clave API no es v√°lida o ha expirado')
    console.error('   ‚Üí Genera una nueva clave en: https://aistudio.google.com/app/apikey')
  } else if (error.message.includes('quota')) {
    console.error('   ‚Üí Se excedi√≥ la cuota de uso')
    console.error('   ‚Üí Espera o aumenta los l√≠mites en Google Cloud Console')
  } else if (error.message.includes('permission')) {
    console.error('   ‚Üí La clave no tiene permisos para Generative Language API')
    console.error('   ‚Üí Verifica los permisos en Google Cloud Console')
  } else {
    console.error(`   ‚Üí ${error.message}`)
  }
  
  process.exit(1)
}

// Verificaci√≥n 4: Configuraci√≥n del proyecto
console.log('\nüìã Verificando configuraci√≥n del proyecto...')
console.log('‚úÖ SDK: @google/generative-ai instalado')
console.log('‚úÖ Modelo: gemini-2.5-flash configurado')
console.log('‚úÖ Timeout: 15000ms configurado')

console.log('\nüéâ ¬°Todas las verificaciones pasaron exitosamente!')
console.log('   La clave API de Gemini est√° correctamente configurada y funcionando.')